postChavezKeywordStemWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "stem", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
preChavezKeywordLemmaProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "lemma", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
postChavezKeywordLemmaProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "lemma", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
#
# # Words #
#
# KeywordWordsProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordWordProportion, postChavezTokenProp = postChavezKeywordWordProportion, WordsORStemsORLemmas = "Words", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordWordsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordWordsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordWordsProp
#
# # Stems #
#
#
# KeywordStemsProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordStemWordProportion, postChavezTokenProp = postChavezKeywordStemWordProportion, WordsORStemsORLemmas = "Stems", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordStemsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordStemsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordStemsProp
#
# Lemmas #
KeywordLemmasProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordLemmaProportion, postChavezTokenProp = postChavezKeywordLemmaProportion, WordsORStemsORLemmas = "Lemmas", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
KeywordLemmasProp
# For Paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
########################################
### Proportion Changes with Keywords ###
##########################################
#
# KeywordsWordsPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordWordProportion, postChavezItemProp = postChavezKeywordWordProportion, WordORStemORLemma = "Word", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsWordsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsWordsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordsWordsPropChange
#
# # Stems #
#
#
# KeywordsStemsPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordStemWordProportion, postChavezItemProp = postChavezKeywordStemWordProportion, WordORStemORLemma = "Stem", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsStemsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsStemsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordsStemsPropChange
# Lemmas #
KeywordsLemmasPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordLemmaProportion, postChavezItemProp = postChavezKeywordLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
KeywordsLemmasPropChange
# For Paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# # #   ##FOR TESTING with Info Generated in Main Script ####
# # #
preChavezTokenProp <- preChavezWordProportion
#
postChavezTokenProp <- postChavezWordProportion
#
WordsORStemsORLemmas="Words"
topNWords <-  20
isKeywords <- FALSE
# # #   ##FOR TESTING with Info Generated in Main Script ####
# Set the correct identifier for the labeling of the graph
if(isKeywords==TRUE){
WordsORStemsORLemmas <- paste("Keyword", WordsORStemsORLemmas, sep=" ")
}
combinedProp <- bind_rows(list(preChavez=preChavezTokenProp, postChavez=postChavezTokenProp), .id="id")
# Rename the varibiles so they have same name within this function regardless of which
# types of terms (Words/Stems/Lemmas) are being analyzed.
internalFunctionVarNames <- c("theDocumentSet", "theTerm", "theProp")
names(combinedProp) <- internalFunctionVarNames
# Prepare the tf_idf table for plotting
combinedProp <- group_by(combinedProp, theDocumentSet)
combinedProp <- arrange(combinedProp, desc(theProp))
combinedProp <- slice(combinedProp, 1:topNWords)
# word_tf_idf <- top_n(word_tf_idf, topNWords, tf_idf)
combinedProp <- ungroup(combinedProp)
combinedProp <- mutate( combinedProp, theTerm = reorder_within(theTerm, theProp, theDocumentSet) )
# Change make theDocumentSet a Factor and set the order of the levels of the factor
#   This will make the order of the two facets in the plot as desired.
combinedProp <- mutate(combinedProp, theDocumentSet=factor(theDocumentSet, levels = c("preChavez", "postChavez") ) )
outPlot <- NULL
outPlot <- ggplot(combinedProp, aes(theTerm, theProp, fill = theDocumentSet))
outPlot <- outPlot + geom_col(show.legend = FALSE)
outPlot <- outPlot + scale_x_reordered()
outPlot <- outPlot + coord_flip()
outPlot <- theme(axis.text.x = element_text(angle=45, hjust=1))
outPlot <- outPlot + facet_wrap("theDocumentSet", scales = "free_y")
outPlot <- outPlot + labs(x = "",
y = "",
title = paste("Proportions for the Top",topNWords,WordsORStemsORLemmas, "\nfor Each Set of Textbooks", sep=" ") )
outPlot
# # #   ##FOR TESTING with Info Generated in Main Script ####
# # #
preChavezTokenProp <- preChavezWordProportion
#
postChavezTokenProp <- postChavezWordProportion
#
WordsORStemsORLemmas="Words"
topNWords <-  20
isKeywords <- FALSE
# # #   ##FOR TESTING with Info Generated in Main Script ####
# Set the correct identifier for the labeling of the graph
if(isKeywords==TRUE){
WordsORStemsORLemmas <- paste("Keyword", WordsORStemsORLemmas, sep=" ")
}
combinedProp <- bind_rows(list(preChavez=preChavezTokenProp, postChavez=postChavezTokenProp), .id="id")
# Rename the varibiles so they have same name within this function regardless of which
# types of terms (Words/Stems/Lemmas) are being analyzed.
internalFunctionVarNames <- c("theDocumentSet", "theTerm", "theProp")
names(combinedProp) <- internalFunctionVarNames
# Prepare the tf_idf table for plotting
combinedProp <- group_by(combinedProp, theDocumentSet)
combinedProp <- arrange(combinedProp, desc(theProp))
combinedProp <- slice(combinedProp, 1:topNWords)
# word_tf_idf <- top_n(word_tf_idf, topNWords, tf_idf)
combinedProp <- ungroup(combinedProp)
combinedProp <- mutate( combinedProp, theTerm = reorder_within(theTerm, theProp, theDocumentSet) )
# Change make theDocumentSet a Factor and set the order of the levels of the factor
#   This will make the order of the two facets in the plot as desired.
combinedProp <- mutate(combinedProp, theDocumentSet=factor(theDocumentSet, levels = c("preChavez", "postChavez") ) )
outPlot <- NULL
outPlot <- ggplot(combinedProp, aes(theTerm, theProp, fill = theDocumentSet))
outPlot <- outPlot + geom_col(show.legend = FALSE)
outPlot <- outPlot + scale_x_reordered()
outPlot <- outPlot + coord_flip()
outPlot <- outPlot + theme(axis.text.x = element_text(angle=45, hjust=1))
outPlot <- outPlot + facet_wrap("theDocumentSet", scales = "free_y")
outPlot <- outPlot + labs(x = "",
y = "",
title = paste("Proportions for the Top",topNWords,WordsORStemsORLemmas, "\nfor Each Set of Textbooks", sep=" ") )
outPlot
#FOR TESTING####
preChavezItemProp <- preChavezKeywordLemmaProportion
postChavezItemProp <- postChavezKeywordLemmaProportion
WordORStemORLemma="Lemma"
numberOfItems=10
isKeywords=TRUE
#FOR TESTING####
if(isKeywords==TRUE){
WordORStemORLemma <- paste("Keyword", WordORStemORLemma, sep=" ")
}
internalFunctionVarNamesPre <- c("theItem", "preProp")
internalFunctionVarNamesPost <- c("theItem", "postProp")
names(preChavezItemProp) <- internalFunctionVarNamesPre
names(postChavezItemProp) <- internalFunctionVarNamesPost
combinedProps <- full_join(preChavezItemProp, postChavezItemProp)
combinedProps <- replace_na(combinedProps, list(preProp = 0,  postProp = 0) )
combinedProps <- mutate(combinedProps, propChange = postProp - preProp)
combinedProps <- arrange(combinedProps, desc(propChange) )
topNIncreases <- slice(combinedProps, 1:numberOfItems)
topNIncreases <- select(topNIncreases, theItem, propChange)
combinedProps <- arrange(combinedProps, propChange)
topNDecreases <- slice(combinedProps, 1:numberOfItems)
topNDecreases <- select(topNDecreases, theItem, propChange)
increasesDecreasesCombined <- bind_rows(topNIncreases, topNDecreases)
#  increasesDecreasesCombined <- mutate(increasesDecreasesCombined, theItem = reorder(theItem, propChange))
increasesDecreasesCombined <- arrange(increasesDecreasesCombined, desc(propChange) )
customPal <- c("firebrick4", "forestgreen")
outPlot <- ggplot(increasesDecreasesCombined)
outPlot <- outPlot + aes(x = reorder(theItem, propChange), y = propChange, fill = propChange > 0)
outPlot <- outPlot + geom_col(show.legend = FALSE)
outPlot <- outPlot + coord_flip()
outPlot <- outPlot + ylab( paste("Top", numberOfItems, "Positive and Top", numberOfItems,"Negative Changes in",WordORStemORLemma,"Proportion", sep=" ") )
outPlot <- outPlot + xlab("")
outPlot <- outPlot + theme(axis.text.x = element_text(angle=45, hjust=1))
outPlot <- outPlot + scale_fill_manual(values = customPal)
outPlot
################################################################
# devScript_Proportions.R
#
# A script to do proportion analysis
################################################################
rm(list = ls(all = TRUE)) # Clear the workspace
# options(scipen=999) # Turns off scientific notation
#################
# Packages
#################
# install.packages("textbooksPrePostChavez")
library(textbooksPrePostChavez)
#####################################
### Read in the Tokenized Data   ###
### Tokenized Data was created   ###
### with the "Cleaning" Script   ###
###################################
preChavezPdfTokens <- read_csv(file = "tokenizedText/preChavezPdfTokenTable.csv")
postChavezPdfTokens <- read_csv(file = "tokenizedText/postChavezPdfTokenTable.csv")
keywordMasterList <- read_csv(file = "tokenizedText/keywordMasterListTable.csv")
########################################
# Graphing Parameters
#####################################
topXNumberOfWordsForChart <- 10
graphW <- 1.5*topXNumberOfWordsForChart
graphH <- topXNumberOfWordsForChart
#####################################
## Calculate Proportions ##
####################################
# Construct a word count, stem word count and lemma count for the two sets of PDFs
preChavezWordProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "word", onlyKeywords = FALSE, theKeywordMasterList = NA)
postChavezWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "word", onlyKeywords = FALSE, theKeywordMasterList = NA)
preChavezStemWordProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "stem", onlyKeywords = FALSE, theKeywordMasterList = NA)
postChavezStemWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "stem", onlyKeywords = FALSE, theKeywordMasterList = NA)
preChavezLemmaProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "lemma", onlyKeywords = FALSE, theKeywordMasterList = NA)
postChavezLemmaProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "lemma", onlyKeywords = FALSE, theKeywordMasterList = NA)
# We can construct a chart that displays all of the words that appear more than X number of times.
# Set the threshold for a word to appear in the chart.
# # Here I am charting all words whose count is in the 99th percentile
# Set the threshold or topXWords
# # Words #
#
# AllWordsProp <- plotPrePostProp(preChavezTokenProp = preChavezWordProportion, postChavezTokenProp = postChavezWordProportion, WordsORStemsORLemmas = "Words", isKeywords = FALSE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllWordsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllWordsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# AllWordsProp
#
# # Stems #
#
#
# AllStemsProp <- plotPrePostProp(preChavezTokenProp = preChavezStemWordProportion, postChavezTokenProp = postChavezStemWordProportion, WordsORStemsORLemmas = "Stems", isKeywords = FALSE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllStemsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllStemsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# AllStemsProp
# Lemmas #
AllLemmasProp <- plotPrePostProp(preChavezTokenProp = preChavezLemmaProportion, postChavezTokenProp = postChavezLemmaProportion, WordsORStemsORLemmas = "Lemmas", isKeywords = FALSE, topNWords = topXNumberOfWordsForChart)
ggsave( paste("images/top",topXNumberOfWordsForChart,"AllLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"AllLemmasProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
AllLemmasProp
# For paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"AllLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
#####################################
## Calculate Changes in the Proportions ##
####################################
#
# AllWordsPropChange <- plotChangesInProp(preChavezItemProp = preChavezWordProportion, postChavezItemProp = postChavezWordProportion, WordORStemORLemma = "Word", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllWordsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllWordsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# AllWordsPropChange
#
# # Stems #
#
#
# AllStemsPropChange <- plotChangesInProp(preChavezItemProp = preChavezStemWordProportion, postChavezItemProp = postChavezStemWordProportion, WordORStemORLemma = "Stem", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllStemsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllStemsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# AllStemsPropChange
#
# Lemmas #
AllLemmasPropChange <- plotChangesInProp(preChavezItemProp = preChavezLemmaProportion, postChavezItemProp = postChavezLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
ggsave( paste("images/top",topXNumberOfWordsForChart,"AllLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"AllLemmasPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
AllLemmasPropChange
# For Paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"AllLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# AllLemmasPropChange50 <- plotChangesInProp(preChavezItemProp = preChavezLemmaProportion, postChavezItemProp = postChavezLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = 50, isKeywords = FALSE)
# ggsave( paste("images/top",50,"AllLemmasPropChange50.pdf", sep=""), width = 50, height = 50, units = "cm" )
# ggsave( paste("images/top",50,"AllLemmasPropChange50.png", sep=""), width = 50, height = 50, units = "cm" )
# AllLemmasPropChange50
#
#
# AllLemmasPropChange100 <- plotChangesInProp(preChavezItemProp = preChavezLemmaProportion, postChavezItemProp = postChavezLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = 100, isKeywords = FALSE)
# ggsave( paste("images/top",100,"AllLemmasPropChange100.pdf", sep=""), width = 60, height = 60, units = "cm" )
# ggsave( paste("images/top",100,"AllLemmasPropChange100.png", sep=""), width = 60, height = 60, units = "cm" )
# AllLemmasPropChange100
#
##########################################################################
##########################################################################
#               EXPLORE TEXT USING KEYWORDS                     ###
##########################################################################
##########################################################################
# Construct a word count, stem word count and lemma count for the two sets of PDFs
preChavezKeywordWordProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "word", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
postChavezKeywordWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "word", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
preChavezKeywordStemWordProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "stem", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
postChavezKeywordStemWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "stem", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
preChavezKeywordLemmaProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "lemma", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
postChavezKeywordLemmaProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "lemma", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
#
# # Words #
#
# KeywordWordsProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordWordProportion, postChavezTokenProp = postChavezKeywordWordProportion, WordsORStemsORLemmas = "Words", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordWordsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordWordsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordWordsProp
#
# # Stems #
#
#
# KeywordStemsProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordStemWordProportion, postChavezTokenProp = postChavezKeywordStemWordProportion, WordsORStemsORLemmas = "Stems", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordStemsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordStemsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordStemsProp
#
# Lemmas #
KeywordLemmasProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordLemmaProportion, postChavezTokenProp = postChavezKeywordLemmaProportion, WordsORStemsORLemmas = "Lemmas", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
KeywordLemmasProp
# For Paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
########################################
### Proportion Changes with Keywords ###
##########################################
#
# KeywordsWordsPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordWordProportion, postChavezItemProp = postChavezKeywordWordProportion, WordORStemORLemma = "Word", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsWordsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsWordsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordsWordsPropChange
#
# # Stems #
#
#
# KeywordsStemsPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordStemWordProportion, postChavezItemProp = postChavezKeywordStemWordProportion, WordORStemORLemma = "Stem", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsStemsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsStemsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordsStemsPropChange
# Lemmas #
KeywordsLemmasPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordLemmaProportion, postChavezItemProp = postChavezKeywordLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
KeywordsLemmasPropChange
# For Paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
library(textbooksPrePostChavez)
################################################################
# devScript_Proportions.R
#
# A script to do proportion analysis
################################################################
rm(list = ls(all = TRUE)) # Clear the workspace
# options(scipen=999) # Turns off scientific notation
#################
# Packages
#################
# install.packages("textbooksPrePostChavez")
library(textbooksPrePostChavez)
#####################################
### Read in the Tokenized Data   ###
### Tokenized Data was created   ###
### with the "Cleaning" Script   ###
###################################
preChavezPdfTokens <- read_csv(file = "tokenizedText/preChavezPdfTokenTable.csv")
postChavezPdfTokens <- read_csv(file = "tokenizedText/postChavezPdfTokenTable.csv")
keywordMasterList <- read_csv(file = "tokenizedText/keywordMasterListTable.csv")
########################################
# Graphing Parameters
#####################################
topXNumberOfWordsForChart <- 10
graphW <- 1.5*topXNumberOfWordsForChart
graphH <- topXNumberOfWordsForChart
#####################################
## Calculate Proportions ##
####################################
# Construct a word count, stem word count and lemma count for the two sets of PDFs
preChavezWordProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "word", onlyKeywords = FALSE, theKeywordMasterList = NA)
postChavezWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "word", onlyKeywords = FALSE, theKeywordMasterList = NA)
preChavezStemWordProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "stem", onlyKeywords = FALSE, theKeywordMasterList = NA)
postChavezStemWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "stem", onlyKeywords = FALSE, theKeywordMasterList = NA)
preChavezLemmaProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "lemma", onlyKeywords = FALSE, theKeywordMasterList = NA)
postChavezLemmaProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "lemma", onlyKeywords = FALSE, theKeywordMasterList = NA)
# We can construct a chart that displays all of the words that appear more than X number of times.
# Set the threshold for a word to appear in the chart.
# # Here I am charting all words whose count is in the 99th percentile
# Set the threshold or topXWords
# # Words #
#
# AllWordsProp <- plotPrePostProp(preChavezTokenProp = preChavezWordProportion, postChavezTokenProp = postChavezWordProportion, WordsORStemsORLemmas = "Words", isKeywords = FALSE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllWordsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllWordsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# AllWordsProp
#
# # Stems #
#
#
# AllStemsProp <- plotPrePostProp(preChavezTokenProp = preChavezStemWordProportion, postChavezTokenProp = postChavezStemWordProportion, WordsORStemsORLemmas = "Stems", isKeywords = FALSE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllStemsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllStemsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# AllStemsProp
# Lemmas #
AllLemmasProp <- plotPrePostProp(preChavezTokenProp = preChavezLemmaProportion, postChavezTokenProp = postChavezLemmaProportion, WordsORStemsORLemmas = "Lemmas", isKeywords = FALSE, topNWords = topXNumberOfWordsForChart)
ggsave( paste("images/top",topXNumberOfWordsForChart,"AllLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"AllLemmasProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
AllLemmasProp
# For paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"AllLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
#####################################
## Calculate Changes in the Proportions ##
####################################
#
# AllWordsPropChange <- plotChangesInProp(preChavezItemProp = preChavezWordProportion, postChavezItemProp = postChavezWordProportion, WordORStemORLemma = "Word", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllWordsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllWordsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# AllWordsPropChange
#
# # Stems #
#
#
# AllStemsPropChange <- plotChangesInProp(preChavezItemProp = preChavezStemWordProportion, postChavezItemProp = postChavezStemWordProportion, WordORStemORLemma = "Stem", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllStemsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"AllStemsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# AllStemsPropChange
#
# Lemmas #
AllLemmasPropChange <- plotChangesInProp(preChavezItemProp = preChavezLemmaProportion, postChavezItemProp = postChavezLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
ggsave( paste("images/top",topXNumberOfWordsForChart,"AllLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"AllLemmasPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
AllLemmasPropChange
# For Paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"AllLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# AllLemmasPropChange50 <- plotChangesInProp(preChavezItemProp = preChavezLemmaProportion, postChavezItemProp = postChavezLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = 50, isKeywords = FALSE)
# ggsave( paste("images/top",50,"AllLemmasPropChange50.pdf", sep=""), width = 50, height = 50, units = "cm" )
# ggsave( paste("images/top",50,"AllLemmasPropChange50.png", sep=""), width = 50, height = 50, units = "cm" )
# AllLemmasPropChange50
#
#
# AllLemmasPropChange100 <- plotChangesInProp(preChavezItemProp = preChavezLemmaProportion, postChavezItemProp = postChavezLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = 100, isKeywords = FALSE)
# ggsave( paste("images/top",100,"AllLemmasPropChange100.pdf", sep=""), width = 60, height = 60, units = "cm" )
# ggsave( paste("images/top",100,"AllLemmasPropChange100.png", sep=""), width = 60, height = 60, units = "cm" )
# AllLemmasPropChange100
#
##########################################################################
##########################################################################
#               EXPLORE TEXT USING KEYWORDS                     ###
##########################################################################
##########################################################################
# Construct a word count, stem word count and lemma count for the two sets of PDFs
preChavezKeywordWordProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "word", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
postChavezKeywordWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "word", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
preChavezKeywordStemWordProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "stem", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
postChavezKeywordStemWordProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "stem", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
preChavezKeywordLemmaProportion <- getProp(tokenTable = preChavezPdfTokens, whichProp = "lemma", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
postChavezKeywordLemmaProportion <- getProp(tokenTable = postChavezPdfTokens, whichProp = "lemma", onlyKeywords = TRUE, theKeywordMasterList = keywordMasterList)
#
# # Words #
#
# KeywordWordsProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordWordProportion, postChavezTokenProp = postChavezKeywordWordProportion, WordsORStemsORLemmas = "Words", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordWordsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordWordsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordWordsProp
#
# # Stems #
#
#
# KeywordStemsProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordStemWordProportion, postChavezTokenProp = postChavezKeywordStemWordProportion, WordsORStemsORLemmas = "Stems", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordStemsProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordStemsProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordStemsProp
#
# Lemmas #
KeywordLemmasProp <- plotPrePostProp(preChavezTokenProp = preChavezKeywordLemmaProportion, postChavezTokenProp = postChavezKeywordLemmaProportion, WordsORStemsORLemmas = "Lemmas", isKeywords = TRUE, topNWords = topXNumberOfWordsForChart)
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.png", sep=""), width = graphW, height = graphH, units = "cm" )
KeywordLemmasProp
# For Paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"KeywordLemmasProp.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
########################################
### Proportion Changes with Keywords ###
##########################################
#
# KeywordsWordsPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordWordProportion, postChavezItemProp = postChavezKeywordWordProportion, WordORStemORLemma = "Word", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsWordsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsWordsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordsWordsPropChange
#
# # Stems #
#
#
# KeywordsStemsPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordStemWordProportion, postChavezItemProp = postChavezKeywordStemWordProportion, WordORStemORLemma = "Stem", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsStemsPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
# ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsStemsPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
# KeywordsStemsPropChange
# Lemmas #
KeywordsLemmasPropChange <- plotChangesInProp(preChavezItemProp = preChavezKeywordLemmaProportion, postChavezItemProp = postChavezKeywordLemmaProportion, WordORStemORLemma = "Lemma", numberOfItems = topXNumberOfWordsForChart, isKeywords = FALSE)
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
ggsave( paste("images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.png", sep=""), width = graphW, height = graphH, units = "cm" )
KeywordsLemmasPropChange
# For Paper
ggsave( paste("methodsAndMethodLitReview/images/top",topXNumberOfWordsForChart,"KeywordsLemmasPropChange.pdf", sep=""), width = graphW, height = graphH, units = "cm" )
#FOR TESTING####
preChavezItemProp <- preChavezKeywordLemmaProportion
postChavezItemProp <- postChavezKeywordLemmaProportion
WordORStemORLemma="Lemma"
numberOfItems=10
isKeywords=TRUE
#FOR TESTING####
if(isKeywords==TRUE){
WordORStemORLemma <- paste("Keyword", WordORStemORLemma, sep=" ")
}
internalFunctionVarNamesPre <- c("theItem", "preProp")
internalFunctionVarNamesPost <- c("theItem", "postProp")
names(preChavezItemProp) <- internalFunctionVarNamesPre
names(postChavezItemProp) <- internalFunctionVarNamesPost
combinedProps <- full_join(preChavezItemProp, postChavezItemProp)
combinedProps <- replace_na(combinedProps, list(preProp = 0,  postProp = 0) )
combinedProps <- mutate(combinedProps, propChange = postProp - preProp)
combinedProps <- arrange(combinedProps, desc(propChange) )
topNIncreases <- slice(combinedProps, 1:numberOfItems)
topNIncreases <- select(topNIncreases, theItem, propChange)
combinedProps <- arrange(combinedProps, propChange)
topNDecreases <- slice(combinedProps, 1:numberOfItems)
topNDecreases <- select(topNDecreases, theItem, propChange)
increasesDecreasesCombined <- bind_rows(topNIncreases, topNDecreases)
#  increasesDecreasesCombined <- mutate(increasesDecreasesCombined, theItem = reorder(theItem, propChange))
increasesDecreasesCombined <- arrange(increasesDecreasesCombined, desc(propChange) )
customPal <- c("firebrick4", "forestgreen")
outPlot <- ggplot(increasesDecreasesCombined)
outPlot <- outPlot + aes(x = reorder(theItem, propChange), y = propChange, fill = propChange > 0)
outPlot <- outPlot + geom_col(show.legend = FALSE)
outPlot <- outPlot + coord_flip()
outPlot <- outPlot + ylab( paste("Top", numberOfItems, "Positive and Top", numberOfItems,"Negative Changes in",WordORStemORLemma,"Proportion", sep=" ") )
outPlot <- outPlot + xlab("")
outPlot <- outPlot + theme(axis.text.x = element_text(angle=45, hjust=1))
outPlot <- outPlot + scale_fill_manual(values = customPal)
outPlot <- outPlot + labs(x = "", y = "", title = paste("Top", numberOfItems, "Positive and Top", numberOfItems,"Negative Changes in",WordORStemORLemma,"Proportion", sep=" ") )
outPlot
library(textbooksPrePostChavez)
